on:
  release:
    types: [created]

jobs:
  release:
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: Linux-GNU-x86_64
            os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            bin: lxcomm
            name: lxcomm-${{github.event.release.tag_name}}-Linux-GNU-x86_64.tar.gz

          - release_for: Linux-GNU-aarch64
            os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            bin: lxcomm
            name: lxcomm-${{github.event.release.tag_name}}-Linux-GNU-aarch64.tar.gz

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: lxcomm.exe
            name: lxcomm-${{github.event.release.tag_name}}-Windows-x86_64.zip

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.platform.target }}

      - name: Build Binary
        run: cargo build --locked --release --target ${{ matrix.platform.target }}

      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -
      - name: Publish release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.bin }}-${{ matrix.platform.os }}-${{ github.ref_name }}
          path: ${{ matrix.platform.name }}

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: ${{ matrix.platform.name }}